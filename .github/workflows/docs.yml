name: website

# build the documentation whenever there are new commits on main
on:
  push:
    branches:
      - main
    # Alternative: only build for tags.
    # tags:
    #   - '*'

# security: restrict permissions for CI jobs.
permissions:
  contents: read

jobs:
  # Build the documentation and upload the static HTML files as an artifact.
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pdoc numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -m pip install .

      # The following is for not using the cache action, but it didn't quite work.
        # with:
        #   python-version: '3.11'
        #   cach: 'pip'
      # - run: pip install pdoc
      # - run: pip install -r requirements.txt
      # - run: pip install -e .

      - name: Build docs
        run: make docs

      - name: upload
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/

  # Deploy the artifact to GitHub pages.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v2
